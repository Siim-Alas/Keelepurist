@page
@model KeelepuristMain.TestFillInBlanksModel
@{
    ViewData["Title"] = "Lünkadega Kontrolltöö";
    int currentCorrectAnswerLength;
}

<h1>Täida kontrolltöö lüngad</h1>
@if (Model.UserAlreadySubmitted)
{
    <p class="text-danger">Olete kontrolltöö juba esitanud ning ei saa seda muuta.</p>
}
else
{
    <p class="text-danger">Vajutades nuppu "Esita ja lõpeta" esitad vastused lõplikult hindajale ning ei saa neid hiljem muuta.</p>

    <form class="exercise-container" method="post">
        @for (var i = 0; i < Model.Exercise.Texts.Count + Model.Exercise.BlankSpaces.Count; i++)
        {
            // Even numbers are always text
            if (i % 2 == 0)
            {
                <span>@Model.Exercise.Texts[i / 2]</span>
            }
            // Odd numbers are always blank spaces
            else
            {
                currentCorrectAnswerLength = Model.Exercise.BlankSpaces[(i - 1) / 2].CorrectAnswers[0].Length;

                <input asp-for="UserAnswers[(i - 1) / 2]"
                       size='@(currentCorrectAnswerLength > 4 ? currentCorrectAnswerLength.ToString() : "4")'
                       autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" />
            }
        }
        <input type="hidden" asp-for="UserAlreadySubmitted" />
        <input type="hidden" asp-for="TestPath" />

        <button class="btn btn-danger" type="submit">
            <i class="material-icons" style="font-size:1em">done</i>  Esita ja lõpeta
        </button>
    </form>
}
<a class="btn btn-light" asp-page="/TestExercises/TestExerciseGlossary">
    <i class="material-icons" style="font-size:1em">arrow_back</i>  Tagasi loendisse
</a>
